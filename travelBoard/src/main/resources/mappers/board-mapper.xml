<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.kh.travel.board.model.mapper.BoardMapper">
		<resultMap type="Board" id="board_rm">
	<!-- id태그 : PK 역할을 하는 컬럼(column), 필드(property)를 작성하는 태그 -->
		<id property="boardNo" column="BOARD_NO"/>
		<!-- collection 태그
			select로 조회된 결과를 컬렉션(List)에 담아
			지정된 필드에 세팅
			
			property : List를 담을 DTO의 필드명
			select : 실행할 select의 id
			column : 조회 결과 중 지정된 컬럼의 값을 파라미터로 전달
			javaType : List(컬렉션)의 타입을 지정
			ofType : List(컬렉션)의 제네릭(타입 제한) 지정
		-->
		<!-- 해당 게시글 이미지 목록 조회 후 Board 필드에 저장 -->
		<collection 
		property="imageList"
		select="selectImageList"
		column="BOARD_NO"
		javaType="java.util.ArrayList"
		ofType = "BoardImg"
		
		/>
		<!-- 실행할 때 
		처음 수행한 sql 결과의 BOARD_NO를 다음 sql들에 전달해서 결과를 ArrayList로 해서 이미지리스트에다 저장할거야 -->
		<!-- selectImageList를 실행하면 결과가 여러 행이 나오는데 파라미터를 board_no 컬럼값 전달할거고 그 결과를 ArrayList로 전달할건데
		BoardImg 타입으로 제한된 ArrayList에 저장해서 imageList 필드에 집어넣겠다 -->
		<!-- 태그를 시작하자마자 종료하겠다 -->
		<!-- Board 내부에서 imageList 컬럼의 값을 저장할거야 -->
		<!-- id가 selectImageList인 것을 수행하겠다 -->
		<!-- 이거 수행하면 리스트가 반환되는데 그걸 Board의 imageList 필드에 저장할거다 -->
		
		<!-- 해당 게시글 댓글 목록 조회 후 Board 필드에 저장 -->
		<collection 
		property="commentList"
		select="selectCommentList"
		column="BOARD_NO"
		javaType="java.util.ArrayList"
		ofType = "Comment"
		/>
	</resultMap>
	<!-- ===================================================================== -->
	<!-- 게시판 종류 목록 조회 (+ 표기법 변경) (이건 헤더에 대륙별 이름 보이는 데 사용할 용도) -->
	<select id="selectBoardTypeList">
		SELECT CONTI_CODE "contiCode", 
		CONTI_NAME "contiName" 
		FROM "CONTINENT"
		ORDER BY CONTI_NAME
	</select>
	<!-- ===================================================================== -->
	<!-- 게시글 목록 조회 서비스(boardList)에서 사용되는 여러 매퍼들  -->
	
	<!-- 삭제되지 않은 게시글 수 조회 -->
	<select id="getListCount">
		SELECT COUNT(*)
	FROM "BOARD"
	JOIN "COUNTRY" USING (COUNTRY_CODE)
	JOIN "CONTINENT" USING (CONTI_CODE)
	WHERE BOARD_DEL_FL='N'
	AND CONTI_CODE=#{contiCode}
	<if test='countryCode !=NULL'>
		AND COUNTRY_CODE = #{countryCode}
		</if>
	</select>
	
		<!-- 해당 대륙 게시판으로 이동 -->
	<select id="selectBoardList">
	
SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,
	(SELECT COUNT(*) FROM "COMMENT" C
	WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
	(SELECT COUNT(*)
	FROM "LIKE" L
	WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
	<![CDATA[ 
		CASE 
			WHEN SYSDATE-WRITE_DATE < 1/24/60
			THEN FLOOR((SYSDATE-WRITE_DATE)*24*60*60)||'초 전'
			
			WHEN SYSDATE-WRITE_DATE <1/24
			THEN FLOOR((SYSDATE-WRITE_DATE)*24*60)||'분 전'
			
			WHEN SYSDATE-WRITE_DATE <1
			THEN FLOOR((SYSDATE-WRITE_DATE)*24)||'시간 전'
			
			ELSE TO_CHAR(WRITE_DATE, 'YYYY-MM-DD')
		END WRITE_DATE 
		]]>
	FROM "BOARD" B
	JOIN "MEMBER" M USING (MEMBER_NO)
	JOIN "COUNTRY" USING (COUNTRY_CODE)
	JOIN "CONTINENT" USING (CONTI_CODE)
	WHERE BOARD_DEL_FL = 'N'
	AND CONTI_CODE = #{contiCode}
	<if test='countryCode !=NULL'>
		AND COUNTRY_CODE = #{countryCode}
		</if>
	ORDER BY BOARD_NO DESC
	</select>
	
	<!-- 검색 조건에 맞는 게시글 수 조회하기(카운트한 결과값이 반환된다) -->
	<select id="getSearchCount">
	SELECT COUNT(*)
		FROM "BOARD"
		JOIN "COUNTRY" USING (COUNTRY_CODE)
		JOIN "CONTINENT" USING (CONTI_CODE)
		<!-- 작성자 검색인 경우 if문 -->
		<if test='key =="w"'>
		JOIN "MEMBER" USING (MEMBER_NO)
		</if>
		
		WHERE BOARD_DEL_FL='N'
		AND CONTI_CODE=#{contiCode}
		<choose>
		
		<!-- 제목으로만 검색(key 값이 "t"인 경우일 때) 
		$를 사용하는 것 지양-->
		<when test='key == "t"'>
		AND BOARD_TITLE LIKE '%' || #{query} || '%'
		</when>
		
		<!-- 내용으로만 검색(key 값이 "c"인 경우일 때) 
		$를 사용하는 것 지양-->
		<when test='key == "c"'>
		AND BOARD_CONTENT LIKE '%' || #{query} || '%'
		</when>
		
		<!-- 제목+내용으로 검색(key 값이 "tc"인 경우일 때) 
		$를 사용하는 것 지양-->
		<when test='key == "tc"'>
		AND (BOARD_TITLE LIKE '%' || #{query} || '%'
					OR 
			BOARD_CONTENT LIKE '%' || #{query} || '%')
		</when>
		
		<!-- 작성자 검색 (key값이 "w"인 경우) -->
		<otherwise>
		 AND MEMBER_NICKNAME LIKE '%' || #{query} || '%'
		</otherwise>
		</choose>
	</select>
		
		<!-- 지정된 페이지의 검색 결과 게시글 목록 조회 -->
		<select id="selectSearchList">
			
SELECT BOARD_NO, BOARD_TITLE, MEMBER_NICKNAME, READ_COUNT,
	(SELECT COUNT(*) FROM "COMMENT" C
	WHERE C.BOARD_NO = B.BOARD_NO) COMMENT_COUNT,
	(SELECT COUNT(*)
	FROM "LIKE" L
	WHERE L.BOARD_NO = B.BOARD_NO) LIKE_COUNT,
	<![CDATA[ 
		CASE 
			WHEN SYSDATE-WRITE_DATE < 1/24/60
			THEN FLOOR((SYSDATE-WRITE_DATE)*24*60*60)||'초 전'
			
			WHEN SYSDATE-WRITE_DATE <1/24
			THEN FLOOR((SYSDATE-WRITE_DATE)*24*60)||'분 전'
			
			WHEN SYSDATE-WRITE_DATE <1
			THEN FLOOR((SYSDATE-WRITE_DATE)*24)||'시간 전'
			
			ELSE TO_CHAR(WRITE_DATE, 'YYYY-MM-DD')
		END WRITE_DATE 
		]]>
	FROM "BOARD" B
	JOIN "MEMBER" M USING (MEMBER_NO)
	JOIN "COUNTRY" R USING (COUNTRY_CODE)
	JOIN "CONTINENT" T USING (CONTI_CODE)
	WHERE BOARD_DEL_FL = 'N'
	AND CONTI_CODE = #{contiCode}
	<choose>
		
		<!-- 제목으로만 검색(key 값이 "t"인 경우일 때) 
		$를 사용하는 것 지양-->
		<when test='key == "t"'>
		AND BOARD_TITLE LIKE '%' || #{query} || '%'
		</when>
		
		<!-- 내용으로만 검색(key 값이 "c"인 경우일 때) 
		$를 사용하는 것 지양-->
		<when test='key == "c"'>
		AND BOARD_CONTENT LIKE '%' || #{query} || '%'
		</when>
		
		<!-- 제목+내용으로 검색(key 값이 "tc"인 경우일 때) 
		$를 사용하는 것 지양-->
		<when test='key == "tc"'>
		AND (BOARD_TITLE LIKE '%' || #{query} || '%'
					OR 
			BOARD_CONTENT LIKE '%' || #{query} || '%')
		</when>
		
		<!-- 작성자 검색 (key값이 "w"인 경우) -->
		<otherwise>
		 AND MEMBER_NICKNAME LIKE '%' || #{query} || '%'
		</otherwise>
		</choose>
	ORDER BY BOARD_NO DESC
	
		</select>
		
		<!-- 해당 게시판에 존재하는 게시글의 나라 이름 종류 조회 -->
		<select id="countryList">
		SELECT DISTINCT COUNTRY_NAME, COUNTRY_CODE
		FROM "BOARD"
		JOIN "COUNTRY" USING (COUNTRY_CODE)
		JOIN "CONTINENT" USING (CONTI_CODE)
		WHERE CONTI_CODE = #{contiCode}
		
		</select>
	<!-- ===================================================================== -->
	<!-- 게시글 상세 조회 -->
	<select id="selectOne" resultMap="board_rm">
	SELECT BOARD_NO, BOARD_TITLE , BOARD_CONTENT ,CONTI_CODE ,READ_COUNT ,
	MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG,
	TO_CHAR(WRITE_DATE,'YYYY"년" MM"월" DD"일" HH24:MI:SS') BOARD_WRITE_DATE,
	(SELECT COUNT(*)FROM "LIKE"
		WHERE BOARD_NO=#{boardNo}) LIKE_COUNT,
	(SELECT IMG_PATH||IMG_RENAME
			FROM "BOARD_IMG" 
			WHERE BOARD_NO=#{boardNo}
			AND IMG_ORDER=0) THUMBNAIL,
			(SELECT COUNT(*) FROM "LIKE"
				WHERE MEMBER_NO =#{memberNo}
				AND BOARD_NO =#{boardNo}) LIKE_CHECK
FROM "BOARD"
JOIN "MEMBER" USING(MEMBER_NO)
JOIN "COUNTRY" USING (COUNTRY_CODE)
JOIN "CONTINENT" USING (CONTI_CODE)
WHERE BOARD_DEL_FL ='N'
AND CONTI_CODE=#{contiCode}
AND BOARD_NO =#{boardNo}
	</select>
	<!-- 상세 조회한 게시글의 이미지 목록 조회 -->
	<select id="selectImageList" resultType="BoardImg">
	SELECT * FROM "BOARD_IMG"
	WHERE BOARD_NO =#{boardNo}
	ORDER BY IMG_ORDER
	</select>
	<!-- 이거 수행하면 리스트가 반환되는데 -->
	
	<!-- 상세 조회한 게시글의 댓글 목록 조회 -->
	<!-- Comment DTO로 저장될거다 -->
	<select id="selectCommentList" resultType="Comment">
	
	SELECT LEVEL, C.* 
FROM
		(SELECT COMMENT_NO, COMMENT_CONTENT,
		  TO_CHAR(COMMENT_WRITE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') COMMENT_WRITE_DATE,
		    BOARD_NO, MEMBER_NO, MEMBER_NICKNAME, PROFILE_IMG, PARENT_COMMENT_NO, COMMENT_DEL_FL
		FROM "COMMENT"
		JOIN MEMBER USING(MEMBER_NO)
		WHERE BOARD_NO = #{boardNo}) C --서브쿼리의 결과가 테이블 됨
WHERE COMMENT_DEL_FL = 'N'
	OR 0 != (SELECT COUNT(*) FROM "COMMENT" SUB
					WHERE SUB.PARENT_COMMENT_NO = C.COMMENT_NO
					AND COMMENT_DEL_FL = 'N')
	START WITH PARENT_COMMENT_NO IS NULL
	CONNECT BY PRIOR COMMENT_NO = PARENT_COMMENT_NO
	ORDER SIBLINGS BY COMMENT_NO
	
	</select>
	<!-- 조회수 1 증가 -->
	<update id="updateReadCount">
	UPDATE "BOARD" SET
	READ_COUNT = READ_COUNT+1
	WHERE BOARD_NO = #{boardNo}
	</update>
	<!-- 우변의 READ_COUNT는 증가 전의 READ_COUNT값이 나올 거고 거기에 1 더해서 좌변에 다시 대입해줌 -->
	
	<!-- 조회수를 조회 -->
	<select id="selectReadCount" resultType="_int">
	SELECT READ_COUNT
	FROM "BOARD"
	WHERE BOARD_NO = #{boardNo}
	
	</select>
	
	<!-- 해당 게시글의 국가명 조회 -->
	<select id="countryName">
	SELECT COUNTRY_NAME
	FROM "COUNTRY"
	JOIN "BOARD" USING (COUNTRY_CODE)
	WHERE BOARD_NO = #{boardNo}
	</select>
	<!-- ===================================================================== -->
	
	
	
	
	
	
</mapper>
